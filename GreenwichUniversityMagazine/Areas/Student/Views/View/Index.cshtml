@model ViewVM
@{
    ViewData["Title"] = "Article Management";
    int itemsPerPage = 6;
    int totalItems = Model.Articles.Count();
    int totalPages = (int)Math.Ceiling((double)totalItems / itemsPerPage);
    int currentPage = Context.Request.Query["page"].Count > 0 ? Convert.ToInt32(Context.Request.Query["page"]) : 1;
    int startIndex = (currentPage - 1) * itemsPerPage;
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>


<link rel="stylesheet" href="~/css/Student/ViewArticle.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">


<div class="main-container">

    <div class="content">
        <div class="card-container" id="cardContainer">
            <div class="viewbag" style="border-bottom: 1px solid black; 
    color: #01013e; font-size: 24px; font-family: 'Signika', sans-serif; margin-bottom: 20px">
    @if (ViewBag.MagazineName != null)
    {
        <h2>Magazine - @ViewBag.MagazineName</h2>
    } else if (ViewBag.TermName != null)
    {
        <h2>Term - @ViewBag.TermName</h2>
    } else if (ViewBag.FacultyName != null)
    {
        <h2>Faculty - @ViewBag.FacultyName</h2>
    } else  {
        <h2>Article List</h2>
    }
</div>
            @foreach (var article in Model.Articles.Skip(startIndex).Take(itemsPerPage))
            {
                <div class="card-1" >
                    <div class="card-image-1">
                        <img src="@article.imgUrl" alt="image" />
                    </div>
                    <div class="card-text-1">
                        <a asp-area="Student" asp-controller="Article" asp-action="SelectArticle" asp-route-id="@article.ArticleId"><h3 >@article.Title</h3></a>
                        <p>@article.SubTitle</p>
                        <p style="color: #808080">@article.Magazines.Title</p>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="sidebar">
        <img class="sidebar-image" src="~/css/Student/logo_greenwich.png" alt="Italian Trulli">

        <div class="container-fluid">

            <div>

                @using (Html.BeginForm("Index", "View", FormMethod.Get, new { @class = "form-inline", id = "searchForm" }))
                {
                    <div class="input-group">
                        @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", id = "searchInput", placeholder = "Search" })
                        <button type="submit" class="btn btn-outline-success" id="searchButton">Search</button>
                    </div>
                }

            </div>
            <div class="col-md-3">
                <h6 class="m-1 mr-2 sidebar-title">Term</h6>
                <div class="select-article">

                    <select id="termselect" name="termSelect" aria-label="Default select example" onchange="redirectToTerm()">
                        <option value="">Select a Term</option>
                        @if (Model.Terms == null)
                        {
                            <p>No terms available.</p>
                        }
                        else
                        {
                            @foreach (var term in Model.Terms)
                            {
                                <option value="@term.Id"> @term.StartDate.ToShortDateString() - @term.EndDate.ToShortDateString() @term.Name</option>
                            }
                        }

                    </select>
                </div>
            </div>

            <div class="col-md-3">
                <h6 class="m-1 mr-2 sidebar-title">Magazine</h6>
                <div class="select-article">

                    <select id="magazineselect" name="magazineSelect" class="select-article" aria-label="Default select example" onchange="redirectToMagazine()">
                        <option value="">Select a Magazine</option>
                        @if (Model.Magazines == null)
                        {
                            <p>No Magazines available.</p>
                        }
                        else
                        {
                            @foreach (var magazine in Model.Magazines)
                            {
                                <option value="@magazine.Id">@magazine.Title</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>

    </div>
</div>

<ul class="pagination home-product-pagination text-center" id="pagination">
    @if (currentPage > 1)
    {
        <li class="pagination-item pagination-previous">
            <a href="#" class="pagination-item-link" data-page="@(currentPage - 1)">Previous</a>
        </li>
    }
    @for (int i = 1; i <= totalPages; i++)
    {
        <li class="pagination-item @(i == currentPage ? "pagination-item--active" : "")">
            <a href="#" class="pagination-item-link" data-page="@i">@i</a>
        </li>
    }
    @if (currentPage < totalPages)
    {
        <li class="pagination-item pagination-next">
            <a href="#" class="pagination-item-link" data-page="@(currentPage + 1)">Next</a>
        </li>
    }
</ul>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        var maxTitleWords = 15; // Số từ tối đa cho Title
        var maxSubtitleWords = 20; // Số từ tối đa cho SubTitle

        limitWords('.card-text-1 h3', maxTitleWords);
        limitWords('.card-text-1 p', maxSubtitleWords);

        function limitWords(selector, maxWords) {
            var elements = document.querySelectorAll(selector);
            elements.forEach(function (element) {
                var words = element.textContent.trim().split(/\s+/);
                if (words.length > maxWords) {
                    element.textContent = words.slice(0, maxWords).join(" ") + '...';
                }
            });
        }
    });


            document.addEventListener("DOMContentLoaded", function () {
        const pagination = document.getElementById("pagination");
        pagination.addEventListener("click", function (event) {
            event.preventDefault();
            const target = event.target;
            if (target.classList.contains("pagination-item-link")) {
                const page = target.getAttribute("data-page");
                let url;
                const currentUrl = new URL(window.location.href);
                const magazineId = currentUrl.searchParams.get("magazineid");
                const termId = currentUrl.searchParams.get("termid");
                const facultyId = currentUrl.searchParams.get("facultyid");
                const searchString = currentUrl.searchParams.get("searchString");

                if (searchString) {
                    url = `${window.location.pathname}?searchString=${searchString}&page=${page}`;
                } else if (magazineId) {
                    url = `${window.location.pathname}?magazineid=${magazineId}&page=${page}`;
                } else if (termId) {
                    url = `${window.location.pathname}?termid=${termId}&page=${page}`;
                   
                } else if (facultyId) {
                    url = `${window.location.pathname}?facultyid=${facultyId}&page=${page}`;
                } else {
                    url = `${window.location.pathname}?page=${page}`;
                }
                window.location.href = url;
            }
        });
    });

    $(document).ready(function () {
        // Giới hạn số từ trong card title
        $("#articleContainer .card-title").each(function () {
            var maxWords = 5;
            var title = $(this).text().trim().split(/\s+/);
            if (title.length > maxWords) {
                var limitedTitle = title.slice(0, maxWords).join(" ");
                $(this).text(limitedTitle + "...");
            }
        });

        // Giới hạn số từ trong card text
        $("#articleContainer .card-text").each(function () {
            var maxWords = 15;
            var text = $(this).text().trim().split(/\s+/);
            if (text.length > maxWords) {
                var limitedText = text.slice(0, maxWords).join(" ");
                $(this).text(limitedText + "...");
            }
        });
    });

    // ham load magazine ( doi du lieu onchange="redirectToMagazine() tren select duoc load thi thuc hien ham nay)
    function redirectToMagazine() {
        // lấy dữ liệu từ select box
        var selectedMagazineId = document.getElementById("magazineselect").value;
        // url mặc định
        var baseUrl = "/student/view/index";

        if (selectedMagazineId) {
            // Nếu có giá trị, thêm vào URL
            window.location.href = baseUrl + "?magazineid=" + selectedMagazineId;
        } else {
            // Nếu không có giá trị, chỉ chuyển đến trang mặc định
            window.location.href = baseUrl;
        }
    }

    function redirectToTerm() {
        var selectedTermId = document.getElementById("termselect").value;
        var baseUrl = "/student/view/index";
        if (selectedTermId) {
            window.location.href = baseUrl + "?termid=" + selectedTermId;
        } else {
            window.location.href = baseUrl;
        }
    }

    function redirectToFaculty() {
        var selectedFacultyId = document.getElementById("facultyselect").value;
        var baseUrl = "/student/view/index";
        if (selectedFacultyId) {
            window.location.href = baseUrl + "?facultyid=" + selectedFacultyId;
        } else {
            window.location.href = baseUrl;
        }
    }
    document.getElementById("searchForm").addEventListener("submit", function (event) {
        // Lấy giá trị của ô tìm kiếm
        var searchString = document.getElementById("searchInput").value;
        // Kiểm tra xem ô tìm kiếm có rỗng không
        if (!searchString.trim()) {
            // Nếu rỗng, hủy việc gửi form
            event.preventDefault();
        } else {
            // Nếu có giá trị, tạo URL tìm kiếm và chuyển hướng đến trang kết quả tìm kiếm
            var baseUrl = "/student/view/index";
            var searchUrl = baseUrl + "?searchString=" + searchString;
            window.location.href = searchUrl;
        }
    });





 

</script>







