
@model CoordinateVM
@{
    ViewData["Title"] = "Article Management";
    int itemsPerPage = 5;
    int totalItems = Model.ListArticle.Count();
    int totalPages = (int)Math.Ceiling((double)totalItems / itemsPerPage);
    int currentPage = Context.Request.Query["page"].Count > 0 ? Convert.ToInt32(Context.Request.Query["page"]) : 1;
    int startIndex = (currentPage - 1) * itemsPerPage;
    var sortedArticles = Model.ListArticle.Skip(startIndex).Take(itemsPerPage);
}
<link rel="stylesheet" href="~/css/Coordinate/Article.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css" />

<div class="card shadow border-0 my-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="py-2">Article Managment</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-5">
        <div class="row pb-3">
            <div class="col-6"></div>
            <div class="col-6 text-end">
                <div class="form-group row">
                    <div class="select-container">
                        <div class="select-wrapper">
                            <label for="magazineSelect">Magazine:</label>
                            <select id="magazineSelect" name="id" class="select-magazine">
                                <option value="all">All</option>
                                @foreach (var magazine in Model.AvailableMagazines)
                                {
                                    <option value="@magazine.Value">@magazine.Text</option>
                                }
                            </select>
                        </div>

                       @*  <div class="select-wrapper">
                            <label for="statusSelect">Status:</label>
                            <select id="statusSelect" name="status" class="select">
                                <option value="all">All</option>
                                <option value="pending">Pending</option>
                                <option value="approved">Approved</option>
                            </select>
                        </div> *@
                        <div class="radio-container">
                            <label>Status:</label><br>
                            <input type="radio" id="all" name="status" value="all" checked>
                            <label for="all">All</label><br>
                            <input type="radio" id="pending" name="status" value="pending">
                            <label for="pending">Pending</label><br>
                            <input type="radio" id="approved" name="status" value="approved">
                            <label for="approved">Approved</label><br>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container" id="articleListContainer">
            <div class="row" id="bookList">
                <div class="col text-center">
                    @if (Model.ListArticle == null || !Model.ListArticle.Any())
                    {
                        <p class="display-4">There are no active magazines at your time or There are no more pending articles </p>
                    }
                    else
                    {
                        @foreach (var article in sortedArticles)
                        {
                            <div class="article-card" data-magazine-id="@article.MagazinedId">
                                <img class="article-card-img" src="@article.imgUrl" alt="Top Image">
                                <div class="article-information">
                                    <label class="article-card-text">Magazine: @article.Magazines.Title</label>
                                    <h2 class="article-card-text">
                                        @article.Title
                                    </h2>
                                    <p class="article-card-text text-ellipsis">@article.SubTitle</p>
                                </div>
                                <div class="card-button">
                                    <div class="d-flex justify-content-between align-items-center">
                                        @if(article.Status == false)
                                        {
                                            <a asp-controller="Coordinate" asp-action="Detail" asp-route-Id="@article.ArticleId" class="btn btn-primary mx-2">
                                                <i class="bi bi-pencil-square"></i> Detail
                                            </a>
                                        }
                                        else
                                        {
                                            <a asp-area="Student" asp-controller="Article" asp-action="SelectArticle" asp-route-Id="@article.ArticleId" class="btn btn-primary mx-2">
                                                <i class="bi bi-pencil-square"></i> View
                                            </a>
                                        }
                                            @if (article.Status == false)
                                            {
                                                <span class="pending-text">Pending</span>
                                            }
                                            else
                                            {
                                                <span class="approve-text">Approved</span>
                                            }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
           
<ul class="pagination home-product-pagination text-center" id="pagination">
    @if (currentPage > 1)
    {
        <li class="pagination-item pagination-previous">
            <a href="#" class="pagination-item-link" data-page="@(currentPage - 1)">Previous</a>
        </li>
    }
    @for (int i = 1; i <= totalPages; i++)
    {
        <li class="pagination-item @(i == currentPage ? "pagination-item--active" : "")">
            <a href="#" class="pagination-item-link" data-page="@i">@i</a>
        </li>
    }
    @if (currentPage < totalPages)
    {
        <li class="pagination-item pagination-next">
            <a href="#" class="pagination-item-link" data-page="@(currentPage + 1)">Next</a>
        </li>
    }
</ul>
        </div>
    </div>
    <script>

        // Lưu giá trị của select box vào sessionStorage và chuyển trang khi thay đổi magazine
        document.getElementById('magazineSelect').addEventListener('change', function () {
            var selectedMagazineId = this.value;
            sessionStorage.setItem('selectedMagazineId', selectedMagazineId);
            updateUrl();
        });

        // Sự kiện onchange cho phân trang
        document.querySelectorAll('.pagination-item-link').forEach(link => {
            link.addEventListener('click', function (event) {
                event.preventDefault();
                var selectedPage = this.getAttribute('data-page');
                updateUrl(selectedPage);
            });
        });

        // Sự kiện onchange cho select box status
        // Lắng nghe sự kiện change của các radio buttons
        var radioButtons = document.querySelectorAll('input[name="status"]');
        radioButtons.forEach(function (radioButton) {
            radioButton.addEventListener('change', function () {
                if (this.checked) {
                    var selectedStatus = this.value;
                    sessionStorage.setItem('selectedStatus', selectedStatus);
                    updateUrl();
                }
            });
        });

        // Hàm cập nhật URL dựa trên các giá trị được chọn
        function updateUrl(selectedPage = null) {
            var selectedMagazineId = sessionStorage.getItem('selectedMagazineId');
            var selectedStatus = sessionStorage.getItem('selectedStatus');
            var pageQuery = selectedPage ? '&page=' + selectedPage : '';
            var newUrl = '@Url.Action("Index", "Coordinate")' + '?id=' + selectedMagazineId + '&status=' + selectedStatus + pageQuery;
            window.location.href = newUrl;
        }

        // Kiểm tra nếu có giá trị đã lưu trong sessionStorage, chọn lại select box và radio buttons với giá trị này
        document.addEventListener("DOMContentLoaded", function () {
            var selectedMagazineId = sessionStorage.getItem('selectedMagazineId');
            var selectedStatus = sessionStorage.getItem('selectedStatus');
            var currentPath = window.location.pathname.toLowerCase();

            // Kiểm tra nếu đường dẫn là "/coordinate/index", tức là không phải trang "Article Management"
            if (!currentPath.includes('/coordinate/index')) {
                if (selectedMagazineId) {
                    document.getElementById('magazineSelect').value = selectedMagazineId;
                } else {
                    document.getElementById('magazineSelect').value = 'all';
                }

                if (selectedStatus) {
                    document.querySelector('input[name="status"][value="' + selectedStatus + '"]').checked = true;
                } else {
                    document.querySelector('input[name="status"][value="all"]').checked = true;
                }
            } else {
                // Xóa session khi vào trang "Article Management"
                sessionStorage.setItem('selectedMagazineId', 'all');

                sessionStorage.setItem('selectedStatus', 'all');
                document.querySelector('input[name="status"][value="all"]').checked = true;
            }
        });
    </script>

